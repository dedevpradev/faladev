services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: userpostgres
      POSTGRES_PASSWORD: passwordpostgres
      POSTGRES_DB: faladev
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    volumes:
      - ./servers.json:/pgadmin4/servers.json

  jaeger:
    image: jaegertracing/all-in-one:1.31
    container_name: jaeger
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '14268:14268'
      - '14250:14250'
      - '9411:9411'

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: faladev
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: userpostgres
      DB_PASSWORD: passwordpostgres
      DB_NAME: faladev
      DATABASE_URL: postgres://userpostgres:passwordpostgres@postgres:5432/faladev?sslmode=disable
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    ports:
      - '8080:8080'
    volumes:
      - ./backend:/app/backend
      - ./frontend/build:/app/frontend/build
    depends_on:
      - postgres
      - jaeger

  frontend:
    image: node:20-alpine
    container_name: frontend
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - '3000:3000'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
